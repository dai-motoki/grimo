name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  grimo-nonlogin-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v2

      - name: セットアップPython
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 環境変数を設定
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> $GITHUB_ENV

      - name: 依存関係をインストール
        run: |
          pip install --upgrade grimo niwatoko
          niwatoko -v 
          grimo install i18niwatoko


      - name: テストを実行
        run: |
          cd tests
          niwatoko def.md -o exe.md

  grimo-login-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v2

      - name: セットアップPython
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 環境変数を設定
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> $GITHUB_ENV

      # echo "SERVER_URL=http://localhost:8000" >> $GITHUB_ENV

      - name: 依存関係をインストール
        run: |
          pip install --upgrade grimo niwatoko uvicorn
          niwatoko -v 

      # - name: テストサーバー起動
      #   run: |
      #     cd auth
      #     ls -la
      #     # uvicorn server:app --host 0.0.0.0 --port 8000 &
      #     uvicorn server:app --reload
      #     sleep 5
      # server.pyはheroku上で起動しており、gihhubで管理されていない
      - name: サインアップテスト
        run: |
          grimo signup --email "test@example.com" --password "password"

      - name: ログインテスト
        run: |
          grimo login --email "test@example.com" --password "password"

      # - name: サインアップテスト
      #   run: |
      #     grimo signup --server-url "${{ env.SERVER_URL }}" --email "test@example.com" --password "password"

      # - name: ログインテスト
      #   run: |
      #     grimo login --server-url "${{ env.SERVER_URL }}" --email "test@example.com" --password "password"

      # - name: パッケージアップロードテスト
      #   run: |
      #     grimo --server-url "${{ env.SERVER_URL }}" upload test-package

      # - name: パッケージ検索テスト
      #   run: |
      #     grimo --server-url "${{ env.SERVER_URL }}" search test-package

      # - name: パッケージインストールテスト
      #   run: |
      #     grimo --server-url "${{ env.SERVER_URL }}" install test-package

      # - name: パッケージアップデートテスト
      #   run: |
      #     grimo --server-url "${{ env.SERVER_URL }}" update test-package

      # - name: パッケージアンインストールテスト
      #   run: |
      #     grimo --server-url "${{ env.SERVER_URL }}" uninstall test-package

      # - name: インストール済みパッケージ一覧表示テスト
      #   run: |
      #     grimo --server-url "${{ env.SERVER_URL }}" list
